<?php

/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* replacement for hook_menu */
function hello_menu_menu() {

  /* localhost:8080/drupal/hello */
  /* 'hello' is the key in the drupal path */
  $items['hello'] = array(
    'title' => 'Hello World',  /* note: not translated */
    'page callback' => 'hello_menu_simple_hello',  /* function to call */
    'access arguments' => array('access content'), /* corresponds to 'View Published Content' */
    'menu_name' => 'main-menu', /* by default, gets added by default to navigation menu */
    'weight' => 1,  /* otherwise, by default, this puts it left of Home in Main menu */
    );

  /* this creates menu item in navigation
  $items['variables'] = array(
    'title' => 'Hello Variables',
    'page callback' => 'hello_menu_list_variables',
    'access arguments' => array('access content'),
    'menu_name' => 'navigation',     
    );
    */
   
  /* placeholder for tab 
   * default local task inherits everything else from logical parent hello
   */
  $items['hello/simple'] = array(
    'title' => 'Simple',  
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -1, /* force it to be left-most */
    );
    
  /* this creates hello/variables/ */
  $items['hello/variables'] = array(
    'title' => 'Hello Variables',
    'page callback' => 'hello_menu_list_variables',
    'access arguments' => array('access content'),
    /* 'menu_name' => 'navigation',     /* not needed for a subtab */
    'type' => MENU_LOCAL_TASK,
    );

  /* this uses % for dynamic page name 
   * everything is at top-level variables/
   * array for title and page arguments is:
   * 0: variables
   * 1: wildcard value from the %
   * arrau(1) sends second URL value to callbacks
   */
  /*
  $items['variables/%'] = array(
    'title callback' => 'hello_menu_show_variable_title',
    'title arguments' => array(1),
    'page callback' => 'hello_menu_show_variable',
    'page arguments' => array(1), 
    'access arguments' => array('access content'),
    'menu_name' => 'navigation',
  );
   */
  
  /* this creates hierarchy hello/variables/% 
   * note that now need to pass array(2) to the callbacks
   */
  $items['hello/variables/%'] = array(
    'title callback' => 'hello_menu_show_variable_title',
    'title arguments' => array(2),
    'page callback' => 'hello_menu_show_variable',
    'page arguments' => array(2), 
    'access arguments' => array('access content'),
    'menu_name' => 'navigation',
  );
  
  /* action link to create a new variable, displays wtih + symbol */
  $items['hello/variables/create'] = array(
    'title' => 'Create Variable',
    'page callback' => 'hello_menu_create_variable',
    'access arguments' => array('access content'), /* note, not good security */
    'type' => MENU_LOCAL_ACTION,
  );
  return $items;
}

/* NOTE: start your function names with your module name */
/* this must return a string */

/* just print hello */
function hello_menu_simple_hello() {
  return t('Hello world!!!');
}

/* list the variables */
function hello_menu_list_variables() {
  $variables = variable_initialize(); /* get all variables into array */
  $names = array_keys ($variables);
  $output = '<ul>'; /* start unordered list in HTML */
  
  /* dpm ($variables); */  /* this makes it appear at top */  
  /* return t('TESTING!!'); */ /* just returns the string */
  /* return(kpr ($variables, TRUE));  */ /* this makes it appear in main section */
  /* return(kpr ($names, TRUE)); * /* returns just variable names */
  
  foreach ($names as $name) {
    /* $output .= '<li>' . $name . '</li>'; */ /* this just lists the names */
    
    /* $output .= '<li><a href="variables/' . $name . '">' . $name . '</a></li>'; */  /* this makes the names clickable */
    
    /* $output .= '<li>' . l($name, 'variables/' . $name) . '</li>'; */ /* better way using l- function */
    
    /* $output .= '<li>' . l($name, 'variables/' . $name,
      array('attributes' => array('class' => array('test-link', 'other-link')))) . '</li>'; */ /* option to specify CSS class */

    $output .= '<li>' . l($name, 'hello/variables/' . $name,
      array('attributes' => array('target' => '_blank'))) . '</li>'; /* option for new tab or window */
 
    }
  $output .= "</ul>"; /* close unordered list */
  return ($output);
}

/* works with specific variable: site_name */
function hello_menu_show_variables() {
  $value = variable_get('site_name', t('No value for this variable'));
  return ($value);
}

/* get variable name as a parameter */
function hello_menu_show_variable($variable_name) {
  $value = variable_get($variable_name, t('No value for this variable'));
  return ($value);
}

/* callback for title with parameter */
function hello_menu_show_variable_title($variable_name) {
  return t('Show Variable: @name', array('@name' => $variable_name));
}

/* page callback for create variable */
function hello_menu_create_variable() {
  return t('This is how we create a variable');
}

/* NOTE: I got WSOD for http://localhost:8080/drupal/variables/cron_last and some others */